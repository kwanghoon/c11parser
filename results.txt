c11parser-0.1.0.0: unregistering (local file changes: .stack-work/dist/x86_64-linux/Cabal-3.2.1.0/build/autogen/Paths_c11parser.hs .stack-work/dist/x86...)
c11parser> build (lib + exe + test)
Preprocessing library for c11parser-0.1.0.0..
Building library for c11parser-0.1.0.0..
Preprocessing executable 'c11parser-exe' for c11parser-0.1.0.0..
Building executable 'c11parser-exe' for c11parser-0.1.0.0..
Preprocessing test suite 'c11parser-test' for c11parser-0.1.0.0..
Building test suite 'c11parser-test' for c11parser-0.1.0.0..
Warning: Enabling workaround for Main module 'Main' listed in 'other-modules'
illegally!
[11 of 11] Compiling Main
Linking .stack-work/dist/x86_64-linux/Cabal-3.2.1.0/build/c11parser-test/c11parser-test ...
c11parser> copy/register
Installing library in /home/choi/work/lang/haskell/syncomp/c11parser/.stack-work/install/x86_64-linux/d6f9ea7d810bd8bc3e89a4ab8400e48b68b45221b786c12decfda4b5ae422071/8.10.7/lib/x86_64-linux-ghc-8.10.7/c11parser-0.1.0.0-3eilVTotaZ871QGe9iKUNH
Installing executable c11parser-exe in /home/choi/work/lang/haskell/syncomp/c11parser/.stack-work/install/x86_64-linux/d6f9ea7d810bd8bc3e89a4ab8400e48b68b45221b786c12decfda4b5ae422071/8.10.7/bin
Registering library for c11parser-0.1.0.0..
c11parser> test (suite: c11parser-test)

Candidates: bm1-1
[White Terminal ++]
[White Terminal --]
[White Terminal %=]
[White Terminal &=]
[White Terminal *=]
[White Terminal +=]
[White Terminal -=]
[White Terminal /=]
[White Terminal <<=]
[White Terminal =]
[White Terminal >>=]
[White Terminal ^=]
[White Terminal |=]
[White Terminal %]
[White Terminal *]
[White Terminal /]
[White Terminal +]
[White Terminal -]
[White Terminal <<]
[White Terminal >>]
[White Terminal <]
[White Terminal <=]
[White Terminal >]
[White Terminal >=]
[White Terminal !=]
[White Terminal ==]

["++"]
["--"]
["%="]
["&="]
["*="]
["+="]
["-="]
["/="]
["<<="]
["="]
[">>="]
["^="]
["|="]
["%"]
["*"]
["/"]
["+"]
["-"]
["<<"]
[">>"]
["<"]
["<="]
[">"]
[">="]
["!="]
["=="]

Candidates: bm1-2
[White Terminal ++]
[White Terminal --]
[White Terminal ->,White Nonterminal general_identifier]
[White Terminal .,White Nonterminal general_identifier]
[White Terminal %=]
[White Terminal &=]
[White Terminal *=]
[White Terminal +=]
[White Terminal -=]
[White Terminal /=]
[White Terminal <<=]
[White Terminal =]
[White Terminal >>=]
[White Terminal ^=]
[White Terminal |=]
[White Terminal %]
[White Terminal *]
[White Terminal /]
[White Terminal +]
[White Terminal -]
[White Terminal <<]
[White Terminal >>]
[White Terminal <]
[White Terminal <=]
[White Terminal >]
[White Terminal >=]
[White Terminal !=]
[White Terminal ==]
[White Terminal &,White Nonterminal equality_expression]
[White Terminal ^,White Nonterminal and_expression]
[White Terminal |,White Nonterminal exclusive_or_expression]
[White Terminal &&,White Nonterminal inclusive_or_expression]
[White Terminal ||,White Nonterminal logical_and_expression]
[White Terminal ),White Nonterminal scoped_statement]
[White Terminal ,,White Nonterminal assignment_expression]

["++"]
["--"]
["->","..."]
[".","..."]
["%="]
["&="]
["*="]
["+="]
["-="]
["/="]
["<<="]
["="]
[">>="]
["^="]
["|="]
["%"]
["*"]
["/"]
["+"]
["-"]
["<<"]
[">>"]
["<"]
["<="]
[">"]
[">="]
["!="]
["=="]
["&","..."]
["^","..."]
["|","..."]
["&&","..."]
["||","..."]
[")","..."]
[",","..."]

Candidates: bm1-3
[White Terminal (,White Nonterminal option_argument_expression_list,White Terminal )]
[White Terminal ++]
[White Terminal --]
[White Terminal ->,White Nonterminal general_identifier]
[White Terminal .,White Nonterminal general_identifier]
[White Terminal [,White Nonterminal expression,White Terminal ]]
[White Terminal %=]
[White Terminal &=]
[White Terminal *=]
[White Terminal +=]
[White Terminal -=]
[White Terminal /=]
[White Terminal <<=]
[White Terminal =]
[White Terminal >>=]
[White Terminal ^=]
[White Terminal |=]
[White Terminal %]
[White Terminal *]
[White Terminal /]
[White Terminal +]
[White Terminal -]
[White Terminal <<]
[White Terminal >>]
[White Terminal <]
[White Terminal <=]
[White Terminal >]
[White Terminal >=]
[White Terminal !=]
[White Terminal ==]
[White Terminal &,White Nonterminal equality_expression]
[White Terminal ^,White Nonterminal and_expression]
[White Terminal |,White Nonterminal exclusive_or_expression]
[White Terminal &&,White Nonterminal inclusive_or_expression]
[White Terminal ||,White Nonterminal logical_and_expression]
[White Terminal ),White Nonterminal scoped_statement]
[White Terminal ,,White Nonterminal assignment_expression]

["(","...",")"]
["++"]
["--"]
["->","..."]
[".","..."]
["[","...","]"]
["%="]
["&="]
["*="]
["+="]
["-="]
["/="]
["<<="]
["="]
[">>="]
["^="]
["|="]
["%"]
["*"]
["/"]
["+"]
["-"]
["<<"]
[">>"]
["<"]
["<="]
[">"]
[">="]
["!="]
["=="]
["&","..."]
["^","..."]
["|","..."]
["&&","..."]
["||","..."]
[")","..."]
[",","..."]

Candidates: bm1-4
[White Terminal (,White Nonterminal option_argument_expression_list,White Terminal )]
[White Terminal ++]
[White Terminal --]
[White Terminal ->,White Nonterminal general_identifier]
[White Terminal .,White Nonterminal general_identifier]
[White Terminal [,White Nonterminal expression,White Terminal ]]
[White Terminal %=]
[White Terminal &=]
[White Terminal *=]
[White Terminal +=]
[White Terminal -=]
[White Terminal /=]
[White Terminal <<=]
[White Terminal =]
[White Terminal >>=]
[White Terminal ^=]
[White Terminal |=]
[White Terminal %]
[White Terminal *]
[White Terminal /]
[White Terminal +]
[White Terminal -]
[White Terminal <<]
[White Terminal >>]
[White Terminal <]
[White Terminal <=]
[White Terminal >]
[White Terminal >=]
[White Terminal !=]
[White Terminal ==]
[White Terminal &,White Nonterminal equality_expression]
[White Terminal ^,White Nonterminal and_expression]
[White Terminal |,White Nonterminal exclusive_or_expression]
[White Terminal &&,White Nonterminal inclusive_or_expression]
[White Terminal ?,White Nonterminal expression,White Terminal :,White Nonterminal conditional_expression]
[White Terminal ||,White Nonterminal logical_and_expression]
[White Terminal ),White Nonterminal scoped_statement]
[White Terminal ,,White Nonterminal assignment_expression]

["(","...",")"]
["++"]
["--"]
["->","..."]
[".","..."]
["[","...","]"]
["%="]
["&="]
["*="]
["+="]
["-="]
["/="]
["<<="]
["="]
[">>="]
["^="]
["|="]
["%"]
["*"]
["/"]
["+"]
["-"]
["<<"]
[">>"]
["<"]
["<="]
[">"]
[">="]
["!="]
["=="]
["&","..."]
["^","..."]
["|","..."]
["&&","..."]
["?","...",":","..."]
["||","..."]
[")","..."]
[",","..."]

Candidates: bm1-5
[White Terminal (,White Nonterminal option_argument_expression_list,White Terminal )]
[White Terminal ++]
[White Terminal --]
[White Terminal ->,White Nonterminal general_identifier]
[White Terminal .,White Nonterminal general_identifier]
[White Terminal [,White Nonterminal expression,White Terminal ]]
[White Terminal %=]
[White Terminal &=]
[White Terminal *=]
[White Terminal +=]
[White Terminal -=]
[White Terminal /=]
[White Terminal <<=]
[White Terminal =]
[White Terminal >>=]
[White Terminal ^=]
[White Terminal |=]
[White Terminal %]
[White Terminal *]
[White Terminal /]
[White Terminal +]
[White Terminal -]
[White Terminal <<]
[White Terminal >>]
[White Terminal <]
[White Terminal <=]
[White Terminal >]
[White Terminal >=]
[White Terminal !=]
[White Terminal ==]
[White Terminal &,White Nonterminal equality_expression]
[White Terminal ^,White Nonterminal and_expression]
[White Terminal |,White Nonterminal exclusive_or_expression]
[White Terminal &&,White Nonterminal inclusive_or_expression]
[White Terminal ?,White Nonterminal expression,White Terminal :,White Nonterminal conditional_expression]
[White Terminal ||,White Nonterminal logical_and_expression]
[White Terminal ),White Nonterminal scoped_statement]
[White Terminal ,,White Nonterminal assignment_expression]

["(","...",")"]
["++"]
["--"]
["->","..."]
[".","..."]
["[","...","]"]
["%="]
["&="]
["*="]
["+="]
["-="]
["/="]
["<<="]
["="]
[">>="]
["^="]
["|="]
["%"]
["*"]
["/"]
["+"]
["-"]
["<<"]
[">>"]
["<"]
["<="]
[">"]
[">="]
["!="]
["=="]
["&","..."]
["^","..."]
["|","..."]
["&&","..."]
["?","...",":","..."]
["||","..."]
[")","..."]
[",","..."]

Candidates: bm1-6
[White Terminal (,White Nonterminal option_argument_expression_list,White Terminal )]
[White Terminal ++]
[White Terminal --]
[White Terminal ->,White Nonterminal general_identifier]
[White Terminal .,White Nonterminal general_identifier]
[White Terminal [,White Nonterminal expression,White Terminal ]]
[White Terminal %=]
[White Terminal &=]
[White Terminal *=]
[White Terminal +=]
[White Terminal -=]
[White Terminal /=]
[White Terminal <<=]
[White Terminal =]
[White Terminal >>=]
[White Terminal ^=]
[White Terminal |=]
[White Terminal %]
[White Terminal *]
[White Terminal /]
[White Terminal +]
[White Terminal -]
[White Terminal <<]
[White Terminal >>]
[White Terminal <]
[White Terminal <=]
[White Terminal >]
[White Terminal >=]
[White Terminal !=]
[White Terminal ==]
[White Terminal &,White Nonterminal equality_expression]
[White Terminal ^,White Nonterminal and_expression]
[White Terminal |,White Nonterminal exclusive_or_expression]
[White Terminal &&,White Nonterminal inclusive_or_expression]
[White Terminal ?,White Nonterminal expression,White Terminal :,White Nonterminal conditional_expression]
[White Terminal ||,White Nonterminal logical_and_expression]
[White Terminal ),White Nonterminal scoped_statement]
[White Terminal ,,White Nonterminal assignment_expression]

["(","...",")"]
["++"]
["--"]
["->","..."]
[".","..."]
["[","...","]"]
["%="]
["&="]
["*="]
["+="]
["-="]
["/="]
["<<="]
["="]
[">>="]
["^="]
["|="]
["%"]
["*"]
["/"]
["+"]
["-"]
["<<"]
[">>"]
["<"]
["<="]
[">"]
[">="]
["!="]
["=="]
["&","..."]
["^","..."]
["|","..."]
["&&","..."]
["?","...",":","..."]
["||","..."]
[")","..."]
[",","..."]

Candidates: bm1-7
[White Terminal (,White Nonterminal option_argument_expression_list,White Terminal )]
[White Terminal ++]
[White Terminal --]
[White Terminal ->,White Nonterminal general_identifier]
[White Terminal .,White Nonterminal general_identifier]
[White Terminal [,White Nonterminal expression,White Terminal ]]
[White Terminal %=]
[White Terminal &=]
[White Terminal *=]
[White Terminal +=]
[White Terminal -=]
[White Terminal /=]
[White Terminal <<=]
[White Terminal =]
[White Terminal >>=]
[White Terminal ^=]
[White Terminal |=]
[White Terminal %]
[White Terminal *]
[White Terminal /]
[White Terminal +]
[White Terminal -]
[White Terminal <<]
[White Terminal >>]
[White Terminal <]
[White Terminal <=]
[White Terminal >]
[White Terminal >=]
[White Terminal !=]
[White Terminal ==]
[White Terminal &,White Nonterminal equality_expression]
[White Terminal ^,White Nonterminal and_expression]
[White Terminal |,White Nonterminal exclusive_or_expression]
[White Terminal &&,White Nonterminal inclusive_or_expression]
[White Terminal ?,White Nonterminal expression,White Terminal :,White Nonterminal conditional_expression]
[White Terminal ||,White Nonterminal logical_and_expression]
[White Terminal ),White Nonterminal scoped_statement]
[White Terminal ,,White Nonterminal assignment_expression]

["(","...",")"]
["++"]
["--"]
["->","..."]
[".","..."]
["[","...","]"]
["%="]
["&="]
["*="]
["+="]
["-="]
["/="]
["<<="]
["="]
[">>="]
["^="]
["|="]
["%"]
["*"]
["/"]
["+"]
["-"]
["<<"]
[">>"]
["<"]
["<="]
[">"]
[">="]
["!="]
["=="]
["&","..."]
["^","..."]
["|","..."]
["&&","..."]
["?","...",":","..."]
["||","..."]
[")","..."]
[",","..."]

Candidates: bm1-8
[White Terminal (,White Nonterminal option_argument_expression_list,White Terminal )]
[White Terminal ++]
[White Terminal --]
[White Terminal ->,White Nonterminal general_identifier]
[White Terminal .,White Nonterminal general_identifier]
[White Terminal [,White Nonterminal expression,White Terminal ]]
[White Terminal %=]
[White Terminal &=]
[White Terminal *=]
[White Terminal +=]
[White Terminal -=]
[White Terminal /=]
[White Terminal <<=]
[White Terminal =]
[White Terminal >>=]
[White Terminal ^=]
[White Terminal |=]
[White Terminal %]
[White Terminal *]
[White Terminal /]
[White Terminal +]
[White Terminal -]
[White Terminal <<]
[White Terminal >>]
[White Terminal <]
[White Terminal <=]
[White Terminal >]
[White Terminal >=]
[White Terminal !=]
[White Terminal ==]
[White Terminal &,White Nonterminal equality_expression]
[White Terminal ^,White Nonterminal and_expression]
[White Terminal |,White Nonterminal exclusive_or_expression]
[White Terminal &&,White Nonterminal inclusive_or_expression]
[White Terminal ?,White Nonterminal expression,White Terminal :,White Nonterminal conditional_expression]
[White Terminal ||,White Nonterminal logical_and_expression]
[White Terminal ),White Nonterminal scoped_statement]
[White Terminal ,,White Nonterminal assignment_expression]

["(","...",")"]
["++"]
["--"]
["->","..."]
[".","..."]
["[","...","]"]
["%="]
["&="]
["*="]
["+="]
["-="]
["/="]
["<<="]
["="]
[">>="]
["^="]
["|="]
["%"]
["*"]
["/"]
["+"]
["-"]
["<<"]
[">>"]
["<"]
["<="]
[">"]
[">="]
["!="]
["=="]
["&","..."]
["^","..."]
["|","..."]
["&&","..."]
["?","...",":","..."]
["||","..."]
[")","..."]
[",","..."]

Candidates: bm1-9
[White Terminal (,White Nonterminal option_argument_expression_list,White Terminal )]
[White Terminal ++]
[White Terminal --]
[White Terminal ->,White Nonterminal general_identifier]
[White Terminal .,White Nonterminal general_identifier]
[White Terminal [,White Nonterminal expression,White Terminal ]]
[White Terminal %=]
[White Terminal &=]
[White Terminal *=]
[White Terminal +=]
[White Terminal -=]
[White Terminal /=]
[White Terminal <<=]
[White Terminal =]
[White Terminal >>=]
[White Terminal ^=]
[White Terminal |=]
[White Terminal %]
[White Terminal *]
[White Terminal /]
[White Terminal +]
[White Terminal -]
[White Terminal <<]
[White Terminal >>]
[White Terminal <]
[White Terminal <=]
[White Terminal >]
[White Terminal >=]
[White Terminal !=]
[White Terminal ==]
[White Terminal &,White Nonterminal equality_expression]
[White Terminal ^,White Nonterminal and_expression]
[White Terminal |,White Nonterminal exclusive_or_expression]
[White Terminal &&,White Nonterminal inclusive_or_expression]
[White Terminal ?,White Nonterminal expression,White Terminal :,White Nonterminal conditional_expression]
[White Terminal ||,White Nonterminal logical_and_expression]
[White Terminal ),White Nonterminal scoped_statement]
[White Terminal ,,White Nonterminal assignment_expression]

["(","...",")"]
["++"]
["--"]
["->","..."]
[".","..."]
["[","...","]"]
["%="]
["&="]
["*="]
["+="]
["-="]
["/="]
["<<="]
["="]
[">>="]
["^="]
["|="]
["%"]
["*"]
["/"]
["+"]
["-"]
["<<"]
[">>"]
["<"]
["<="]
[">"]
[">="]
["!="]
["=="]
["&","..."]
["^","..."]
["|","..."]
["&&","..."]
["?","...",":","..."]
["||","..."]
[")","..."]
[",","..."]

Candidates: bm2-1
[White Terminal !]
[White Terminal &]
[White Terminal *]
[White Terminal +]
[White Terminal -]
[White Terminal CONSTANT]
[White Terminal STRING_LITERAL]
[White Terminal ~]
[White Terminal ;]
[White Terminal !]
[White Terminal &]
[White Terminal *]
[White Terminal +]
[White Terminal -]
[White Terminal CONSTANT]
[White Terminal STRING_LITERAL]
[White Terminal ~]
[White Nonterminal compound_statement]
[White Nonterminal selection_statement]
[White Nonterminal iteration_statement]

["!"]
["&"]
["*"]
["+"]
["-"]
["CONSTANT"]
["STRING_LITERAL"]
["~"]
[";"]
["..."]

Candidates: bm2-2
[White Terminal !]
[White Terminal &]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal continue,White Terminal ;]
[White Terminal sizeof,White Nonterminal unary_expression]
[White Terminal ~]
[White Terminal ;]
[White Terminal !]
[White Terminal &]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal continue,White Terminal ;]
[White Terminal sizeof,White Nonterminal unary_expression]
[White Terminal ~]
[White Nonterminal compound_statement]
[White Nonterminal selection_statement]
[White Nonterminal iteration_statement]

["!"]
["&"]
["*"]
["+"]
["++","..."]
["-"]
["--","..."]
["CONSTANT"]
["NAME","TYPE"]
["NAME","VARIABLE"]
["STRING_LITERAL"]
["break",";"]
["continue",";"]
["sizeof","..."]
["~"]
[";"]
["..."]

Candidates: bm2-3
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Nonterminal unary_expression]
[White Terminal ~]
[White Terminal ;]
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Nonterminal unary_expression]
[White Terminal ~]
[White Terminal {,White Nonterminal option_block_item_list,White Terminal }]

["!"]
["&"]
["(","...",")"]
["*"]
["+"]
["++","..."]
["-"]
["--","..."]
["CONSTANT"]
["NAME","TYPE"]
["NAME","VARIABLE"]
["STRING_LITERAL"]
["break",";"]
["continue",";"]
["default",":","..."]
["goto","...",";"]
["return","...",";"]
["sizeof","..."]
["~"]
[";"]
["{","...","}"]

Candidates: bm2-4
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal type_name,White Terminal ),White Nonterminal cast_expression]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal case,White Nonterminal constant_expression,White Terminal :,White Nonterminal statement]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Terminal (,White Nonterminal type_name,White Terminal )]
[White Terminal ~]
[White Terminal ;]
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal type_name,White Terminal ),White Nonterminal cast_expression]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal case,White Nonterminal constant_expression,White Terminal :,White Nonterminal statement]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Terminal (,White Nonterminal type_name,White Terminal )]
[White Terminal ~]
[White Terminal {,White Nonterminal option_block_item_list,White Terminal }]

["!"]
["&"]
["(","...",")","..."]
["(","...",")"]
["*"]
["+"]
["++","..."]
["-"]
["--","..."]
["CONSTANT"]
["NAME","TYPE"]
["NAME","VARIABLE"]
["STRING_LITERAL"]
["break",";"]
["case","...",":","..."]
["continue",";"]
["default",":","..."]
["goto","...",";"]
["return","...",";"]
["sizeof","(","...",")"]
["~"]
[";"]
["{","...","}"]

Candidates: bm2-5
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal type_name,White Terminal ),White Nonterminal cast_expression]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal case,White Nonterminal constant_expression,White Terminal :,White Nonterminal statement]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Terminal (,White Nonterminal type_name,White Terminal )]
[White Terminal ~]
[White Terminal ;]
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal type_name,White Terminal ),White Nonterminal cast_expression]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal case,White Nonterminal constant_expression,White Terminal :,White Nonterminal statement]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Terminal (,White Nonterminal type_name,White Terminal )]
[White Terminal ~]
[White Terminal if,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal switch,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal while,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal {,White Nonterminal option_block_item_list,White Terminal }]

["!"]
["&"]
["(","...",")","..."]
["(","...",")"]
["*"]
["+"]
["++","..."]
["-"]
["--","..."]
["CONSTANT"]
["NAME","TYPE"]
["NAME","VARIABLE"]
["STRING_LITERAL"]
["break",";"]
["case","...",":","..."]
["continue",";"]
["default",":","..."]
["goto","...",";"]
["return","...",";"]
["sizeof","(","...",")"]
["~"]
[";"]
["if","(","...",")","..."]
["switch","(","...",")","..."]
["while","(","...",")","..."]
["{","...","}"]

Candidates: bm2-6
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal type_name,White Terminal ),White Nonterminal cast_expression]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal case,White Nonterminal constant_expression,White Terminal :,White Nonterminal statement]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Terminal (,White Nonterminal type_name,White Terminal )]
[White Terminal ~]
[White Terminal ;]
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal type_name,White Terminal ),White Nonterminal cast_expression]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal case,White Nonterminal constant_expression,White Terminal :,White Nonterminal statement]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Terminal (,White Nonterminal type_name,White Terminal )]
[White Terminal ~]
[White Terminal if,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal switch,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal while,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal {,White Nonterminal option_block_item_list,White Terminal }]

["!"]
["&"]
["(","...",")","..."]
["(","...",")"]
["*"]
["+"]
["++","..."]
["-"]
["--","..."]
["CONSTANT"]
["NAME","TYPE"]
["NAME","VARIABLE"]
["STRING_LITERAL"]
["break",";"]
["case","...",":","..."]
["continue",";"]
["default",":","..."]
["goto","...",";"]
["return","...",";"]
["sizeof","(","...",")"]
["~"]
[";"]
["if","(","...",")","..."]
["switch","(","...",")","..."]
["while","(","...",")","..."]
["{","...","}"]

Candidates: bm2-7
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal type_name,White Terminal ),White Terminal {,White Nonterminal initializer_list,White Nonterminal option_comma,White Terminal }]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal case,White Nonterminal constant_expression,White Terminal :,White Nonterminal statement]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Terminal (,White Nonterminal type_name,White Terminal )]
[White Terminal ~]
[White Terminal ;]
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal type_name,White Terminal ),White Terminal {,White Nonterminal initializer_list,White Nonterminal option_comma,White Terminal }]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal case,White Nonterminal constant_expression,White Terminal :,White Nonterminal statement]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Terminal (,White Nonterminal type_name,White Terminal )]
[White Terminal ~]
[White Terminal do,White Nonterminal scoped_statement,White Terminal while,White Terminal (,White Nonterminal expression,White Terminal ),White Terminal ;]
[White Terminal if,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal switch,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal while,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal {,White Nonterminal option_block_item_list,White Terminal }]

["!"]
["&"]
["(","...",")","{","...","}"]
["(","...",")"]
["*"]
["+"]
["++","..."]
["-"]
["--","..."]
["CONSTANT"]
["NAME","TYPE"]
["NAME","VARIABLE"]
["STRING_LITERAL"]
["break",";"]
["case","...",":","..."]
["continue",";"]
["default",":","..."]
["goto","...",";"]
["return","...",";"]
["sizeof","(","...",")"]
["~"]
[";"]
["do","...","while","(","...",")",";"]
["if","(","...",")","..."]
["switch","(","...",")","..."]
["while","(","...",")","..."]
["{","...","}"]

Candidates: bm2-8
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal type_name,White Terminal ),White Terminal {,White Nonterminal initializer_list,White Nonterminal option_comma,White Terminal }]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal case,White Nonterminal constant_expression,White Terminal :,White Nonterminal statement]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Terminal (,White Nonterminal type_name,White Terminal )]
[White Terminal ~]
[White Terminal ;]
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal type_name,White Terminal ),White Terminal {,White Nonterminal initializer_list,White Nonterminal option_comma,White Terminal }]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal case,White Nonterminal constant_expression,White Terminal :,White Nonterminal statement]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Terminal (,White Nonterminal type_name,White Terminal )]
[White Terminal ~]
[White Terminal do,White Nonterminal scoped_statement,White Terminal while,White Terminal (,White Nonterminal expression,White Terminal ),White Terminal ;]
[White Terminal for,White Terminal (,White Nonterminal declaration,White Nonterminal option_expression,White Terminal ;,White Nonterminal option_expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal if,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal switch,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal while,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal {,White Nonterminal option_block_item_list,White Terminal }]

["!"]
["&"]
["(","...",")","{","...","}"]
["(","...",")"]
["*"]
["+"]
["++","..."]
["-"]
["--","..."]
["CONSTANT"]
["NAME","TYPE"]
["NAME","VARIABLE"]
["STRING_LITERAL"]
["break",";"]
["case","...",":","..."]
["continue",";"]
["default",":","..."]
["goto","...",";"]
["return","...",";"]
["sizeof","(","...",")"]
["~"]
[";"]
["do","...","while","(","...",")",";"]
["for","(","...",";","...",")","..."]
["if","(","...",")","..."]
["switch","(","...",")","..."]
["while","(","...",")","..."]
["{","...","}"]

Candidates: bm2-9
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal type_name,White Terminal ),White Terminal {,White Nonterminal initializer_list,White Nonterminal option_comma,White Terminal }]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal case,White Nonterminal constant_expression,White Terminal :,White Nonterminal statement]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Terminal (,White Nonterminal type_name,White Terminal )]
[White Terminal ~]
[White Terminal ;]
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal type_name,White Terminal ),White Terminal {,White Nonterminal initializer_list,White Nonterminal option_comma,White Terminal }]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal case,White Nonterminal constant_expression,White Terminal :,White Nonterminal statement]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Terminal (,White Nonterminal type_name,White Terminal )]
[White Terminal ~]
[White Terminal do,White Nonterminal scoped_statement,White Terminal while,White Terminal (,White Nonterminal expression,White Terminal ),White Terminal ;]
[White Terminal for,White Terminal (,White Nonterminal option_expression,White Terminal ;,White Nonterminal option_expression,White Terminal ;,White Nonterminal option_expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal for,White Terminal (,White Nonterminal declaration,White Nonterminal option_expression,White Terminal ;,White Nonterminal option_expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal if,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal switch,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal while,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal {,White Nonterminal option_block_item_list,White Terminal }]

["!"]
["&"]
["(","...",")","{","...","}"]
["(","...",")"]
["*"]
["+"]
["++","..."]
["-"]
["--","..."]
["CONSTANT"]
["NAME","TYPE"]
["NAME","VARIABLE"]
["STRING_LITERAL"]
["break",";"]
["case","...",":","..."]
["continue",";"]
["default",":","..."]
["goto","...",";"]
["return","...",";"]
["sizeof","(","...",")"]
["~"]
[";"]
["do","...","while","(","...",")",";"]
["for","(","...",";","...",";","...",")","..."]
["for","(","...",";","...",")","..."]
["if","(","...",")","..."]
["switch","(","...",")","..."]
["while","(","...",")","..."]
["{","...","}"]

Candidates: bm3-1
[White Terminal ++]
[White Terminal --]
[White Terminal %=]
[White Terminal &=]
[White Terminal *=]
[White Terminal +=]
[White Terminal -=]
[White Terminal /=]
[White Terminal <<=]
[White Terminal =]
[White Terminal >>=]
[White Terminal ^=]
[White Terminal |=]
[White Terminal %]
[White Terminal *]
[White Terminal /]
[White Terminal +]
[White Terminal -]
[White Terminal <<]
[White Terminal >>]
[White Terminal <]
[White Terminal <=]
[White Terminal >]
[White Terminal >=]
[White Terminal !=]
[White Terminal ==]

["++"]
["--"]
["%="]
["&="]
["*="]
["+="]
["-="]
["/="]
["<<="]
["="]
[">>="]
["^="]
["|="]
["%"]
["*"]
["/"]
["+"]
["-"]
["<<"]
[">>"]
["<"]
["<="]
[">"]
[">="]
["!="]
["=="]

Candidates: bm3-2
[White Terminal ++]
[White Terminal --]
[White Terminal ->,White Nonterminal general_identifier]
[White Terminal .,White Nonterminal general_identifier]
[White Terminal %=]
[White Terminal &=]
[White Terminal *=]
[White Terminal +=]
[White Terminal -=]
[White Terminal /=]
[White Terminal <<=]
[White Terminal =]
[White Terminal >>=]
[White Terminal ^=]
[White Terminal |=]
[White Terminal %]
[White Terminal *]
[White Terminal /]
[White Terminal +]
[White Terminal -]
[White Terminal <<]
[White Terminal >>]
[White Terminal <]
[White Terminal <=]
[White Terminal >]
[White Terminal >=]
[White Terminal !=]
[White Terminal ==]
[White Terminal &,White Nonterminal equality_expression]
[White Terminal ^,White Nonterminal and_expression]
[White Terminal |,White Nonterminal exclusive_or_expression]
[White Terminal &&,White Nonterminal inclusive_or_expression]
[White Terminal ||,White Nonterminal logical_and_expression]
[White Terminal ),White Nonterminal scoped_statement]
[White Terminal ,,White Nonterminal assignment_expression]

["++"]
["--"]
["->","..."]
[".","..."]
["%="]
["&="]
["*="]
["+="]
["-="]
["/="]
["<<="]
["="]
[">>="]
["^="]
["|="]
["%"]
["*"]
["/"]
["+"]
["-"]
["<<"]
[">>"]
["<"]
["<="]
[">"]
[">="]
["!="]
["=="]
["&","..."]
["^","..."]
["|","..."]
["&&","..."]
["||","..."]
[")","..."]
[",","..."]

Candidates: bm3-3
[White Terminal (,White Nonterminal option_argument_expression_list,White Terminal )]
[White Terminal ++]
[White Terminal --]
[White Terminal ->,White Nonterminal general_identifier]
[White Terminal .,White Nonterminal general_identifier]
[White Terminal [,White Nonterminal expression,White Terminal ]]
[White Terminal %=]
[White Terminal &=]
[White Terminal *=]
[White Terminal +=]
[White Terminal -=]
[White Terminal /=]
[White Terminal <<=]
[White Terminal =]
[White Terminal >>=]
[White Terminal ^=]
[White Terminal |=]
[White Terminal %]
[White Terminal *]
[White Terminal /]
[White Terminal +]
[White Terminal -]
[White Terminal <<]
[White Terminal >>]
[White Terminal <]
[White Terminal <=]
[White Terminal >]
[White Terminal >=]
[White Terminal !=]
[White Terminal ==]
[White Terminal &,White Nonterminal equality_expression]
[White Terminal ^,White Nonterminal and_expression]
[White Terminal |,White Nonterminal exclusive_or_expression]
[White Terminal &&,White Nonterminal inclusive_or_expression]
[White Terminal ||,White Nonterminal logical_and_expression]
[White Terminal ),White Nonterminal scoped_statement]
[White Terminal ,,White Nonterminal assignment_expression]

["(","...",")"]
["++"]
["--"]
["->","..."]
[".","..."]
["[","...","]"]
["%="]
["&="]
["*="]
["+="]
["-="]
["/="]
["<<="]
["="]
[">>="]
["^="]
["|="]
["%"]
["*"]
["/"]
["+"]
["-"]
["<<"]
[">>"]
["<"]
["<="]
[">"]
[">="]
["!="]
["=="]
["&","..."]
["^","..."]
["|","..."]
["&&","..."]
["||","..."]
[")","..."]
[",","..."]

Candidates: bm3-4
[White Terminal (,White Nonterminal option_argument_expression_list,White Terminal )]
[White Terminal ++]
[White Terminal --]
[White Terminal ->,White Nonterminal general_identifier]
[White Terminal .,White Nonterminal general_identifier]
[White Terminal [,White Nonterminal expression,White Terminal ]]
[White Terminal %=]
[White Terminal &=]
[White Terminal *=]
[White Terminal +=]
[White Terminal -=]
[White Terminal /=]
[White Terminal <<=]
[White Terminal =]
[White Terminal >>=]
[White Terminal ^=]
[White Terminal |=]
[White Terminal %]
[White Terminal *]
[White Terminal /]
[White Terminal +]
[White Terminal -]
[White Terminal <<]
[White Terminal >>]
[White Terminal <]
[White Terminal <=]
[White Terminal >]
[White Terminal >=]
[White Terminal !=]
[White Terminal ==]
[White Terminal &,White Nonterminal equality_expression]
[White Terminal ^,White Nonterminal and_expression]
[White Terminal |,White Nonterminal exclusive_or_expression]
[White Terminal &&,White Nonterminal inclusive_or_expression]
[White Terminal ?,White Nonterminal expression,White Terminal :,White Nonterminal conditional_expression]
[White Terminal ||,White Nonterminal logical_and_expression]
[White Terminal ),White Nonterminal scoped_statement]
[White Terminal ,,White Nonterminal assignment_expression]

["(","...",")"]
["++"]
["--"]
["->","..."]
[".","..."]
["[","...","]"]
["%="]
["&="]
["*="]
["+="]
["-="]
["/="]
["<<="]
["="]
[">>="]
["^="]
["|="]
["%"]
["*"]
["/"]
["+"]
["-"]
["<<"]
[">>"]
["<"]
["<="]
[">"]
[">="]
["!="]
["=="]
["&","..."]
["^","..."]
["|","..."]
["&&","..."]
["?","...",":","..."]
["||","..."]
[")","..."]
[",","..."]

Candidates: bm3-5
[White Terminal (,White Nonterminal option_argument_expression_list,White Terminal )]
[White Terminal ++]
[White Terminal --]
[White Terminal ->,White Nonterminal general_identifier]
[White Terminal .,White Nonterminal general_identifier]
[White Terminal [,White Nonterminal expression,White Terminal ]]
[White Terminal %=]
[White Terminal &=]
[White Terminal *=]
[White Terminal +=]
[White Terminal -=]
[White Terminal /=]
[White Terminal <<=]
[White Terminal =]
[White Terminal >>=]
[White Terminal ^=]
[White Terminal |=]
[White Terminal %]
[White Terminal *]
[White Terminal /]
[White Terminal +]
[White Terminal -]
[White Terminal <<]
[White Terminal >>]
[White Terminal <]
[White Terminal <=]
[White Terminal >]
[White Terminal >=]
[White Terminal !=]
[White Terminal ==]
[White Terminal &,White Nonterminal equality_expression]
[White Terminal ^,White Nonterminal and_expression]
[White Terminal |,White Nonterminal exclusive_or_expression]
[White Terminal &&,White Nonterminal inclusive_or_expression]
[White Terminal ?,White Nonterminal expression,White Terminal :,White Nonterminal conditional_expression]
[White Terminal ||,White Nonterminal logical_and_expression]
[White Terminal ),White Nonterminal scoped_statement]
[White Terminal ,,White Nonterminal assignment_expression]

["(","...",")"]
["++"]
["--"]
["->","..."]
[".","..."]
["[","...","]"]
["%="]
["&="]
["*="]
["+="]
["-="]
["/="]
["<<="]
["="]
[">>="]
["^="]
["|="]
["%"]
["*"]
["/"]
["+"]
["-"]
["<<"]
[">>"]
["<"]
["<="]
[">"]
[">="]
["!="]
["=="]
["&","..."]
["^","..."]
["|","..."]
["&&","..."]
["?","...",":","..."]
["||","..."]
[")","..."]
[",","..."]

Candidates: bm3-6
[White Terminal (,White Nonterminal option_argument_expression_list,White Terminal )]
[White Terminal ++]
[White Terminal --]
[White Terminal ->,White Nonterminal general_identifier]
[White Terminal .,White Nonterminal general_identifier]
[White Terminal [,White Nonterminal expression,White Terminal ]]
[White Terminal %=]
[White Terminal &=]
[White Terminal *=]
[White Terminal +=]
[White Terminal -=]
[White Terminal /=]
[White Terminal <<=]
[White Terminal =]
[White Terminal >>=]
[White Terminal ^=]
[White Terminal |=]
[White Terminal %]
[White Terminal *]
[White Terminal /]
[White Terminal +]
[White Terminal -]
[White Terminal <<]
[White Terminal >>]
[White Terminal <]
[White Terminal <=]
[White Terminal >]
[White Terminal >=]
[White Terminal !=]
[White Terminal ==]
[White Terminal &,White Nonterminal equality_expression]
[White Terminal ^,White Nonterminal and_expression]
[White Terminal |,White Nonterminal exclusive_or_expression]
[White Terminal &&,White Nonterminal inclusive_or_expression]
[White Terminal ?,White Nonterminal expression,White Terminal :,White Nonterminal conditional_expression]
[White Terminal ||,White Nonterminal logical_and_expression]
[White Terminal ),White Nonterminal scoped_statement]
[White Terminal ,,White Nonterminal assignment_expression]

["(","...",")"]
["++"]
["--"]
["->","..."]
[".","..."]
["[","...","]"]
["%="]
["&="]
["*="]
["+="]
["-="]
["/="]
["<<="]
["="]
[">>="]
["^="]
["|="]
["%"]
["*"]
["/"]
["+"]
["-"]
["<<"]
[">>"]
["<"]
["<="]
[">"]
[">="]
["!="]
["=="]
["&","..."]
["^","..."]
["|","..."]
["&&","..."]
["?","...",":","..."]
["||","..."]
[")","..."]
[",","..."]

Candidates: bm3-7
[White Terminal (,White Nonterminal option_argument_expression_list,White Terminal )]
[White Terminal ++]
[White Terminal --]
[White Terminal ->,White Nonterminal general_identifier]
[White Terminal .,White Nonterminal general_identifier]
[White Terminal [,White Nonterminal expression,White Terminal ]]
[White Terminal %=]
[White Terminal &=]
[White Terminal *=]
[White Terminal +=]
[White Terminal -=]
[White Terminal /=]
[White Terminal <<=]
[White Terminal =]
[White Terminal >>=]
[White Terminal ^=]
[White Terminal |=]
[White Terminal %]
[White Terminal *]
[White Terminal /]
[White Terminal +]
[White Terminal -]
[White Terminal <<]
[White Terminal >>]
[White Terminal <]
[White Terminal <=]
[White Terminal >]
[White Terminal >=]
[White Terminal !=]
[White Terminal ==]
[White Terminal &,White Nonterminal equality_expression]
[White Terminal ^,White Nonterminal and_expression]
[White Terminal |,White Nonterminal exclusive_or_expression]
[White Terminal &&,White Nonterminal inclusive_or_expression]
[White Terminal ?,White Nonterminal expression,White Terminal :,White Nonterminal conditional_expression]
[White Terminal ||,White Nonterminal logical_and_expression]
[White Terminal ),White Nonterminal scoped_statement]
[White Terminal ,,White Nonterminal assignment_expression]

["(","...",")"]
["++"]
["--"]
["->","..."]
[".","..."]
["[","...","]"]
["%="]
["&="]
["*="]
["+="]
["-="]
["/="]
["<<="]
["="]
[">>="]
["^="]
["|="]
["%"]
["*"]
["/"]
["+"]
["-"]
["<<"]
[">>"]
["<"]
["<="]
[">"]
[">="]
["!="]
["=="]
["&","..."]
["^","..."]
["|","..."]
["&&","..."]
["?","...",":","..."]
["||","..."]
[")","..."]
[",","..."]

Candidates: bm3-8
[White Terminal (,White Nonterminal option_argument_expression_list,White Terminal )]
[White Terminal ++]
[White Terminal --]
[White Terminal ->,White Nonterminal general_identifier]
[White Terminal .,White Nonterminal general_identifier]
[White Terminal [,White Nonterminal expression,White Terminal ]]
[White Terminal %=]
[White Terminal &=]
[White Terminal *=]
[White Terminal +=]
[White Terminal -=]
[White Terminal /=]
[White Terminal <<=]
[White Terminal =]
[White Terminal >>=]
[White Terminal ^=]
[White Terminal |=]
[White Terminal %]
[White Terminal *]
[White Terminal /]
[White Terminal +]
[White Terminal -]
[White Terminal <<]
[White Terminal >>]
[White Terminal <]
[White Terminal <=]
[White Terminal >]
[White Terminal >=]
[White Terminal !=]
[White Terminal ==]
[White Terminal &,White Nonterminal equality_expression]
[White Terminal ^,White Nonterminal and_expression]
[White Terminal |,White Nonterminal exclusive_or_expression]
[White Terminal &&,White Nonterminal inclusive_or_expression]
[White Terminal ?,White Nonterminal expression,White Terminal :,White Nonterminal conditional_expression]
[White Terminal ||,White Nonterminal logical_and_expression]
[White Terminal ),White Nonterminal scoped_statement]
[White Terminal ,,White Nonterminal assignment_expression]

["(","...",")"]
["++"]
["--"]
["->","..."]
[".","..."]
["[","...","]"]
["%="]
["&="]
["*="]
["+="]
["-="]
["/="]
["<<="]
["="]
[">>="]
["^="]
["|="]
["%"]
["*"]
["/"]
["+"]
["-"]
["<<"]
[">>"]
["<"]
["<="]
[">"]
[">="]
["!="]
["=="]
["&","..."]
["^","..."]
["|","..."]
["&&","..."]
["?","...",":","..."]
["||","..."]
[")","..."]
[",","..."]

Candidates: bm3-9
[White Terminal (,White Nonterminal option_argument_expression_list,White Terminal )]
[White Terminal ++]
[White Terminal --]
[White Terminal ->,White Nonterminal general_identifier]
[White Terminal .,White Nonterminal general_identifier]
[White Terminal [,White Nonterminal expression,White Terminal ]]
[White Terminal %=]
[White Terminal &=]
[White Terminal *=]
[White Terminal +=]
[White Terminal -=]
[White Terminal /=]
[White Terminal <<=]
[White Terminal =]
[White Terminal >>=]
[White Terminal ^=]
[White Terminal |=]
[White Terminal %]
[White Terminal *]
[White Terminal /]
[White Terminal +]
[White Terminal -]
[White Terminal <<]
[White Terminal >>]
[White Terminal <]
[White Terminal <=]
[White Terminal >]
[White Terminal >=]
[White Terminal !=]
[White Terminal ==]
[White Terminal &,White Nonterminal equality_expression]
[White Terminal ^,White Nonterminal and_expression]
[White Terminal |,White Nonterminal exclusive_or_expression]
[White Terminal &&,White Nonterminal inclusive_or_expression]
[White Terminal ?,White Nonterminal expression,White Terminal :,White Nonterminal conditional_expression]
[White Terminal ||,White Nonterminal logical_and_expression]
[White Terminal ),White Nonterminal scoped_statement]
[White Terminal ,,White Nonterminal assignment_expression]

["(","...",")"]
["++"]
["--"]
["->","..."]
[".","..."]
["[","...","]"]
["%="]
["&="]
["*="]
["+="]
["-="]
["/="]
["<<="]
["="]
[">>="]
["^="]
["|="]
["%"]
["*"]
["/"]
["+"]
["-"]
["<<"]
[">>"]
["<"]
["<="]
[">"]
[">="]
["!="]
["=="]
["&","..."]
["^","..."]
["|","..."]
["&&","..."]
["?","...",":","..."]
["||","..."]
[")","..."]
[",","..."]

Candidates: bm4-1 
[White Terminal !]
[White Terminal &]
[White Terminal *]
[White Terminal +]
[White Terminal -]
[White Terminal CONSTANT]
[White Terminal STRING_LITERAL]
[White Terminal ~]
[White Terminal ;]
[White Terminal !]
[White Terminal &]
[White Terminal *]
[White Terminal +]
[White Terminal -]
[White Terminal CONSTANT]
[White Terminal STRING_LITERAL]
[White Terminal ~]
[White Nonterminal compound_statement]
[White Nonterminal selection_statement]
[White Nonterminal iteration_statement]

["!"]
["&"]
["*"]
["+"]
["-"]
["CONSTANT"]
["STRING_LITERAL"]
["~"]
[";"]
["..."]

Candidates: bm4-2
[White Terminal !]
[White Terminal &]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal continue,White Terminal ;]
[White Terminal sizeof,White Nonterminal unary_expression]
[White Terminal ~]
[White Terminal ;]
[White Terminal !]
[White Terminal &]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal continue,White Terminal ;]
[White Terminal sizeof,White Nonterminal unary_expression]
[White Terminal ~]
[White Nonterminal compound_statement]
[White Nonterminal selection_statement]
[White Nonterminal iteration_statement]

["!"]
["&"]
["*"]
["+"]
["++","..."]
["-"]
["--","..."]
["CONSTANT"]
["NAME","TYPE"]
["NAME","VARIABLE"]
["STRING_LITERAL"]
["break",";"]
["continue",";"]
["sizeof","..."]
["~"]
[";"]
["..."]

Candidates: bm4-3
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Nonterminal unary_expression]
[White Terminal ~]
[White Terminal ;]
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Nonterminal unary_expression]
[White Terminal ~]
[White Terminal {,White Nonterminal option_block_item_list,White Terminal }]

["!"]
["&"]
["(","...",")"]
["*"]
["+"]
["++","..."]
["-"]
["--","..."]
["CONSTANT"]
["NAME","TYPE"]
["NAME","VARIABLE"]
["STRING_LITERAL"]
["break",";"]
["continue",";"]
["default",":","..."]
["goto","...",";"]
["return","...",";"]
["sizeof","..."]
["~"]
[";"]
["{","...","}"]

Candidates: bm4-4
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal type_name,White Terminal ),White Nonterminal cast_expression]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal case,White Nonterminal constant_expression,White Terminal :,White Nonterminal statement]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Terminal (,White Nonterminal type_name,White Terminal )]
[White Terminal ~]
[White Terminal ;]
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal type_name,White Terminal ),White Nonterminal cast_expression]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal case,White Nonterminal constant_expression,White Terminal :,White Nonterminal statement]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Terminal (,White Nonterminal type_name,White Terminal )]
[White Terminal ~]
[White Terminal {,White Nonterminal option_block_item_list,White Terminal }]

["!"]
["&"]
["(","...",")","..."]
["(","...",")"]
["*"]
["+"]
["++","..."]
["-"]
["--","..."]
["CONSTANT"]
["NAME","TYPE"]
["NAME","VARIABLE"]
["STRING_LITERAL"]
["break",";"]
["case","...",":","..."]
["continue",";"]
["default",":","..."]
["goto","...",";"]
["return","...",";"]
["sizeof","(","...",")"]
["~"]
[";"]
["{","...","}"]

Candidates: bm4-5
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal type_name,White Terminal ),White Nonterminal cast_expression]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal case,White Nonterminal constant_expression,White Terminal :,White Nonterminal statement]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Terminal (,White Nonterminal type_name,White Terminal )]
[White Terminal ~]
[White Terminal ;]
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal type_name,White Terminal ),White Nonterminal cast_expression]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal case,White Nonterminal constant_expression,White Terminal :,White Nonterminal statement]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Terminal (,White Nonterminal type_name,White Terminal )]
[White Terminal ~]
[White Terminal if,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal switch,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal while,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal {,White Nonterminal option_block_item_list,White Terminal }]

["!"]
["&"]
["(","...",")","..."]
["(","...",")"]
["*"]
["+"]
["++","..."]
["-"]
["--","..."]
["CONSTANT"]
["NAME","TYPE"]
["NAME","VARIABLE"]
["STRING_LITERAL"]
["break",";"]
["case","...",":","..."]
["continue",";"]
["default",":","..."]
["goto","...",";"]
["return","...",";"]
["sizeof","(","...",")"]
["~"]
[";"]
["if","(","...",")","..."]
["switch","(","...",")","..."]
["while","(","...",")","..."]
["{","...","}"]

Candidates: bm4-6
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal type_name,White Terminal ),White Nonterminal cast_expression]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal case,White Nonterminal constant_expression,White Terminal :,White Nonterminal statement]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Terminal (,White Nonterminal type_name,White Terminal )]
[White Terminal ~]
[White Terminal ;]
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal type_name,White Terminal ),White Nonterminal cast_expression]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal case,White Nonterminal constant_expression,White Terminal :,White Nonterminal statement]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Terminal (,White Nonterminal type_name,White Terminal )]
[White Terminal ~]
[White Terminal if,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal switch,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal while,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal {,White Nonterminal option_block_item_list,White Terminal }]

["!"]
["&"]
["(","...",")","..."]
["(","...",")"]
["*"]
["+"]
["++","..."]
["-"]
["--","..."]
["CONSTANT"]
["NAME","TYPE"]
["NAME","VARIABLE"]
["STRING_LITERAL"]
["break",";"]
["case","...",":","..."]
["continue",";"]
["default",":","..."]
["goto","...",";"]
["return","...",";"]
["sizeof","(","...",")"]
["~"]
[";"]
["if","(","...",")","..."]
["switch","(","...",")","..."]
["while","(","...",")","..."]
["{","...","}"]

Candidates: bm4-7
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal type_name,White Terminal ),White Terminal {,White Nonterminal initializer_list,White Nonterminal option_comma,White Terminal }]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal case,White Nonterminal constant_expression,White Terminal :,White Nonterminal statement]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Terminal (,White Nonterminal type_name,White Terminal )]
[White Terminal ~]
[White Terminal ;]
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal type_name,White Terminal ),White Terminal {,White Nonterminal initializer_list,White Nonterminal option_comma,White Terminal }]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal case,White Nonterminal constant_expression,White Terminal :,White Nonterminal statement]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Terminal (,White Nonterminal type_name,White Terminal )]
[White Terminal ~]
[White Terminal do,White Nonterminal scoped_statement,White Terminal while,White Terminal (,White Nonterminal expression,White Terminal ),White Terminal ;]
[White Terminal if,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal switch,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal while,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal {,White Nonterminal option_block_item_list,White Terminal }]

["!"]
["&"]
["(","...",")","{","...","}"]
["(","...",")"]
["*"]
["+"]
["++","..."]
["-"]
["--","..."]
["CONSTANT"]
["NAME","TYPE"]
["NAME","VARIABLE"]
["STRING_LITERAL"]
["break",";"]
["case","...",":","..."]
["continue",";"]
["default",":","..."]
["goto","...",";"]
["return","...",";"]
["sizeof","(","...",")"]
["~"]
[";"]
["do","...","while","(","...",")",";"]
["if","(","...",")","..."]
["switch","(","...",")","..."]
["while","(","...",")","..."]
["{","...","}"]

Candidates: bm4-8
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal type_name,White Terminal ),White Terminal {,White Nonterminal initializer_list,White Nonterminal option_comma,White Terminal }]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal case,White Nonterminal constant_expression,White Terminal :,White Nonterminal statement]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Terminal (,White Nonterminal type_name,White Terminal )]
[White Terminal ~]
[White Terminal ;]
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal type_name,White Terminal ),White Terminal {,White Nonterminal initializer_list,White Nonterminal option_comma,White Terminal }]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal case,White Nonterminal constant_expression,White Terminal :,White Nonterminal statement]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Terminal (,White Nonterminal type_name,White Terminal )]
[White Terminal ~]
[White Terminal do,White Nonterminal scoped_statement,White Terminal while,White Terminal (,White Nonterminal expression,White Terminal ),White Terminal ;]
[White Terminal for,White Terminal (,White Nonterminal declaration,White Nonterminal option_expression,White Terminal ;,White Nonterminal option_expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal if,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal switch,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal while,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal {,White Nonterminal option_block_item_list,White Terminal }]

["!"]
["&"]
["(","...",")","{","...","}"]
["(","...",")"]
["*"]
["+"]
["++","..."]
["-"]
["--","..."]
["CONSTANT"]
["NAME","TYPE"]
["NAME","VARIABLE"]
["STRING_LITERAL"]
["break",";"]
["case","...",":","..."]
["continue",";"]
["default",":","..."]
["goto","...",";"]
["return","...",";"]
["sizeof","(","...",")"]
["~"]
[";"]
["do","...","while","(","...",")",";"]
["for","(","...",";","...",")","..."]
["if","(","...",")","..."]
["switch","(","...",")","..."]
["while","(","...",")","..."]
["{","...","}"]

Candidates: bm4-9
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal type_name,White Terminal ),White Terminal {,White Nonterminal initializer_list,White Nonterminal option_comma,White Terminal }]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal case,White Nonterminal constant_expression,White Terminal :,White Nonterminal statement]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Terminal (,White Nonterminal type_name,White Terminal )]
[White Terminal ~]
[White Terminal ;]
[White Terminal !]
[White Terminal &]
[White Terminal (,White Nonterminal type_name,White Terminal ),White Terminal {,White Nonterminal initializer_list,White Nonterminal option_comma,White Terminal }]
[White Terminal (,White Nonterminal expression,White Terminal )]
[White Terminal *]
[White Terminal +]
[White Terminal ++,White Nonterminal unary_expression]
[White Terminal -]
[White Terminal --,White Nonterminal unary_expression]
[White Terminal CONSTANT]
[White Terminal NAME,White Terminal TYPE]
[White Terminal NAME,White Terminal VARIABLE]
[White Terminal STRING_LITERAL]
[White Terminal break,White Terminal ;]
[White Terminal case,White Nonterminal constant_expression,White Terminal :,White Nonterminal statement]
[White Terminal continue,White Terminal ;]
[White Terminal default,White Terminal :,White Nonterminal statement]
[White Terminal goto,White Nonterminal general_identifier,White Terminal ;]
[White Terminal return,White Nonterminal option_expression,White Terminal ;]
[White Terminal sizeof,White Terminal (,White Nonterminal type_name,White Terminal )]
[White Terminal ~]
[White Terminal do,White Nonterminal scoped_statement,White Terminal while,White Terminal (,White Nonterminal expression,White Terminal ),White Terminal ;]
[White Terminal for,White Terminal (,White Nonterminal option_expression,White Terminal ;,White Nonterminal option_expression,White Terminal ;,White Nonterminal option_expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal for,White Terminal (,White Nonterminal declaration,White Nonterminal option_expression,White Terminal ;,White Nonterminal option_expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal if,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal switch,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal while,White Terminal (,White Nonterminal expression,White Terminal ),White Nonterminal scoped_statement]
[White Terminal {,White Nonterminal option_block_item_list,White Terminal }]

["!"]
["&"]
["(","...",")","{","...","}"]
["(","...",")"]
["*"]
["+"]
["++","..."]
["-"]
["--","..."]
["CONSTANT"]
["NAME","TYPE"]
["NAME","VARIABLE"]
["STRING_LITERAL"]
["break",";"]
["case","...",":","..."]
["continue",";"]
["default",":","..."]
["goto","...",";"]
["return","...",";"]
["sizeof","(","...",")"]
["~"]
[";"]
["do","...","while","(","...",")",";"]
["for","(","...",";","...",";","...",")","..."]
["for","(","...",";","...",")","..."]
["if","(","...",")","..."]
["switch","(","...",")","..."]
["while","(","...",")","..."]
["{","...","}"]


c11
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 1, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.25s
Time:   0.12
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 2, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.18s
Time:   0.30
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 3, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.22s
Time:   0.80
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 4, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.22s
Time:   4.95
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 5, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.18s
Time:  29.94
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 6, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.18s
Time: 172.96
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 7, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.21s
Time: 960.22
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 8, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.19s
Time: 5957.20
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 9, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.26s
Time: 36392.11
  [Benchmark1] 
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 1, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.34s
Time:   0.04
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 2, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.30s
Time:   0.20
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 3, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.26s
Time:   1.19
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 4, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.23s
Time:   6.96
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 5, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.24s
Time:  42.93
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 6, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.26s
Time: 228.66
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 7, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.72s
Time: 1382.16
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 8, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.39s
Time: 8403.43
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 9, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time:   0.52s
Time: 50858.70
  [Benchmark2] 
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 1, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time: 130.62s
Time:   0.06
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 2, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time: 117.22s
Time:   0.15
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 3, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time: 114.89s
Time:   1.02
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 4, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time: 132.90s
Time:   4.54
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 5, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time: 122.90s
Time:  26.59
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 6, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time: 111.76s
Time: 163.77
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 7, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time: 128.47s
Time: 992.65
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 8, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time: 124.82s
Time: 5769.11
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 9, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time: 115.22s
Time: 36234.91
  [Benchmark3] 
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 1, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time: 151.13s
Time:   0.03
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 2, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time: 118.10s
Time:   0.16
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 3, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time: 128.32s
Time:   1.31
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 4, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time: 128.74s
Time:   6.10
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 5, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time: 120.69s
Time:  39.26
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 6, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time: 136.07s
Time: 228.02
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 7, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time: 130.62s
Time: 1352.73
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 8, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time: 125.26s
Time: 8547.52
Configuration {config_SIMPLE = True, config_R_LEVEL = 1, config_GS_LEVEL = 9, config_DEBUG = False, config_DISPLAY = False, config_PRESENTATION = 0, config_ALGORITHM = 3}
parse time: 124.08s
Time: 49967.56
  [Benchmark4] 

Finished in 187037.7403 seconds
4 examples, 0 failures

c11parser> Test suite c11parser-test passed
Completed 2 action(s).
